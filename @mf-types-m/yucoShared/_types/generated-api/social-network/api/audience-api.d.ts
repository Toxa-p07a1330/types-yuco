/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { Audience } from '../model';
import type { AudienceCreateSchema } from '../model';
import type { AudienceListSchema } from '../model';
/**
 * AudienceApi - axios parameter creator
 * @export
 */
export declare const AudienceApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Create Audience View
     * @param {AudienceCreateSchema} audienceCreateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAudienceViewPost: (audienceCreateSchema: AudienceCreateSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete Audience View
     * @param {number} audienceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAudienceViewDelete: (audienceId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get Audiences View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAudiencesViewGet: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AudienceApi - functional programming interface
 * @export
 */
export declare const AudienceApiFp: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Create Audience View
     * @param {AudienceCreateSchema} audienceCreateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAudienceViewPost(audienceCreateSchema: AudienceCreateSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Audience>>;
    /**
     *
     * @summary Delete Audience View
     * @param {number} audienceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAudienceViewDelete(audienceId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Get Audiences View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAudiencesViewGet(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AudienceListSchema>>;
};
/**
 * Request parameters for createAudienceViewPost operation in AudienceApi.
 * @export
 * @interface AudienceApiCreateAudienceViewPostRequest
 */
export interface AudienceApiCreateAudienceViewPostRequest {
    /**
     *
     * @type {AudienceCreateSchema}
     * @memberof AudienceApiCreateAudienceViewPost
     */
    readonly audienceCreateSchema: AudienceCreateSchema;
}
/**
 * Request parameters for deleteAudienceViewDelete operation in AudienceApi.
 * @export
 * @interface AudienceApiDeleteAudienceViewDeleteRequest
 */
export interface AudienceApiDeleteAudienceViewDeleteRequest {
    /**
     *
     * @type {number}
     * @memberof AudienceApiDeleteAudienceViewDelete
     */
    readonly audienceId: number;
}
/**
 * AudienceApi - interface
 * @export
 * @interface AudienceApi
 */
export interface AudienceApiInterface {
    /**
     *
     * @summary Create Audience View
     * @param {AudienceCreateSchema} audienceCreateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AudienceApiInterface
     */
    createAudienceViewPost(requestParameters: AudienceApiCreateAudienceViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<Audience>;
    /**
     *
     * @summary Delete Audience View
     * @param {number} audienceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AudienceApiInterface
     */
    deleteAudienceViewDelete(requestParameters: AudienceApiDeleteAudienceViewDeleteRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     *
     * @summary Get Audiences View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AudienceApiInterface
     */
    getAudiencesViewGet(options?: RawAxiosRequestConfig): AxiosPromise<AudienceListSchema>;
}
/**
 * AudienceApi - object-oriented interface
 * @export
 * @class AudienceApi
 * @extends {BaseAPI}
 */
export declare class AudienceApi extends BaseAPI implements AudienceApiInterface {
    /**
     *
     * @summary Create Audience View
     * @param {AudienceApiCreateAudienceViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AudienceApi
     */
    createAudienceViewPost(requestParameters: AudienceApiCreateAudienceViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Audience, any>>;
    /**
     *
     * @summary Delete Audience View
     * @param {AudienceApiDeleteAudienceViewDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AudienceApi
     */
    deleteAudienceViewDelete(requestParameters: AudienceApiDeleteAudienceViewDeleteRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Get Audiences View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AudienceApi
     */
    getAudiencesViewGet(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AudienceListSchema, any>>;
}
