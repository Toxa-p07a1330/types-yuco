/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CountryList } from '../model';
import type { Currency } from '../model';
import type { RegionList } from '../model';
/**
 * CountriesApi - axios parameter creator
 * @export
 */
export declare const CountriesApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Get Country Currency View
     * @param {number} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryCurrencyViewGet: (countryId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Cities
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCitiesGet: (sort?: string, offset?: string, limit?: number, query?: string, searchOffset?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Countries View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCountriesViewGet: (sort?: string, offset?: string, limit?: number, query?: string, searchOffset?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Regions
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRegionsGet: (sort?: string, offset?: string, limit?: number, query?: string, searchOffset?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CountriesApi - functional programming interface
 * @export
 */
export declare const CountriesApiFp: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Get Country Currency View
     * @param {number} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCountryCurrencyViewGet(countryId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Currency>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Cities
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCitiesGet(sort?: string, offset?: string, limit?: number, query?: string, searchOffset?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegionList>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Countries View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCountriesViewGet(sort?: string, offset?: string, limit?: number, query?: string, searchOffset?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CountryList>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Regions
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRegionsGet(sort?: string, offset?: string, limit?: number, query?: string, searchOffset?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegionList>>;
};
/**
 * Request parameters for getCountryCurrencyViewGet operation in CountriesApi.
 * @export
 * @interface CountriesApiGetCountryCurrencyViewGetRequest
 */
export interface CountriesApiGetCountryCurrencyViewGetRequest {
    /**
     *
     * @type {number}
     * @memberof CountriesApiGetCountryCurrencyViewGet
     */
    readonly countryId: number;
}
/**
 * Request parameters for listCitiesGet operation in CountriesApi.
 * @export
 * @interface CountriesApiListCitiesGetRequest
 */
export interface CountriesApiListCitiesGetRequest {
    /**
     * Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @type {string}
     * @memberof CountriesApiListCitiesGet
     */
    readonly sort?: string;
    /**
     * Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @type {string}
     * @memberof CountriesApiListCitiesGet
     */
    readonly offset?: string;
    /**
     * Limit of rows count in the response
     * @type {number}
     * @memberof CountriesApiListCitiesGet
     */
    readonly limit?: number;
    /**
     * Query for search by name.
     * @type {string}
     * @memberof CountriesApiListCitiesGet
     */
    readonly query?: string;
    /**
     * Search offset
     * @type {string}
     * @memberof CountriesApiListCitiesGet
     */
    readonly searchOffset?: string;
}
/**
 * Request parameters for listCountriesViewGet operation in CountriesApi.
 * @export
 * @interface CountriesApiListCountriesViewGetRequest
 */
export interface CountriesApiListCountriesViewGetRequest {
    /**
     * Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @type {string}
     * @memberof CountriesApiListCountriesViewGet
     */
    readonly sort?: string;
    /**
     * Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @type {string}
     * @memberof CountriesApiListCountriesViewGet
     */
    readonly offset?: string;
    /**
     * Limit of rows count in the response
     * @type {number}
     * @memberof CountriesApiListCountriesViewGet
     */
    readonly limit?: number;
    /**
     * Query for search by name.
     * @type {string}
     * @memberof CountriesApiListCountriesViewGet
     */
    readonly query?: string;
    /**
     * Search offset
     * @type {string}
     * @memberof CountriesApiListCountriesViewGet
     */
    readonly searchOffset?: string;
}
/**
 * Request parameters for listRegionsGet operation in CountriesApi.
 * @export
 * @interface CountriesApiListRegionsGetRequest
 */
export interface CountriesApiListRegionsGetRequest {
    /**
     * Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @type {string}
     * @memberof CountriesApiListRegionsGet
     */
    readonly sort?: string;
    /**
     * Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @type {string}
     * @memberof CountriesApiListRegionsGet
     */
    readonly offset?: string;
    /**
     * Limit of rows count in the response
     * @type {number}
     * @memberof CountriesApiListRegionsGet
     */
    readonly limit?: number;
    /**
     * Query for search by name.
     * @type {string}
     * @memberof CountriesApiListRegionsGet
     */
    readonly query?: string;
    /**
     * Search offset
     * @type {string}
     * @memberof CountriesApiListRegionsGet
     */
    readonly searchOffset?: string;
}
/**
 * CountriesApi - interface
 * @export
 * @interface CountriesApi
 */
export interface CountriesApiInterface {
    /**
     *
     * @summary Get Country Currency View
     * @param {number} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApiInterface
     */
    getCountryCurrencyViewGet(requestParameters: CountriesApiGetCountryCurrencyViewGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<Currency>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Cities
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApiInterface
     */
    listCitiesGet(requestParameters: CountriesApiListCitiesGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<RegionList>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Countries View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApiInterface
     */
    listCountriesViewGet(requestParameters: CountriesApiListCountriesViewGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<CountryList>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Regions
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [query] Query for search by name.
     * @param {string} [searchOffset] Search offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApiInterface
     */
    listRegionsGet(requestParameters: CountriesApiListRegionsGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<RegionList>;
}
/**
 * CountriesApi - object-oriented interface
 * @export
 * @class CountriesApi
 * @extends {BaseAPI}
 */
export declare class CountriesApi extends BaseAPI implements CountriesApiInterface {
    /**
     *
     * @summary Get Country Currency View
     * @param {CountriesApiGetCountryCurrencyViewGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    getCountryCurrencyViewGet(requestParameters: CountriesApiGetCountryCurrencyViewGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Currency, any>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Cities
     * @param {CountriesApiListCitiesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    listCitiesGet(requestParameters?: CountriesApiListCitiesGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RegionList, any>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Countries View
     * @param {CountriesApiListCountriesViewGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    listCountriesViewGet(requestParameters?: CountriesApiListCountriesViewGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CountryList, any>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - name: str
     * @summary List Regions
     * @param {CountriesApiListRegionsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    listRegionsGet(requestParameters?: CountriesApiListRegionsGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RegionList, any>>;
}
