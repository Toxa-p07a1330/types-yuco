/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CreateReactionSchema } from '../model';
import type { ListReactionsSchema } from '../model';
import type { ObjectTypeChoices } from '../model';
/**
 * ReactionApi - axios parameter creator
 * @export
 */
export declare const ReactionApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Create Reaction View
     * @param {CreateReactionSchema} createReactionSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReactionViewPost: (createReactionSchema: CreateReactionSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete Reaction View
     * @param {number} objectId
     * @param {ObjectTypeChoices} objectType
     * @param {string} action
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteReactionViewDelete: (objectId: number, objectType: ObjectTypeChoices, action: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - action: str
     * @summary Get Reactions View
     * @param {number} objectId
     * @param {ObjectTypeChoices} objectType
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [action] Filter object reactions by action.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReactionsViewGet: (objectId: number, objectType: ObjectTypeChoices, sort?: string, offset?: string, limit?: number, action?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ReactionApi - functional programming interface
 * @export
 */
export declare const ReactionApiFp: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Create Reaction View
     * @param {CreateReactionSchema} createReactionSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createReactionViewPost(createReactionSchema: CreateReactionSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Delete Reaction View
     * @param {number} objectId
     * @param {ObjectTypeChoices} objectType
     * @param {string} action
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteReactionViewDelete(objectId: number, objectType: ObjectTypeChoices, action: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - action: str
     * @summary Get Reactions View
     * @param {number} objectId
     * @param {ObjectTypeChoices} objectType
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [action] Filter object reactions by action.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getReactionsViewGet(objectId: number, objectType: ObjectTypeChoices, sort?: string, offset?: string, limit?: number, action?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListReactionsSchema>>;
};
/**
 * Request parameters for createReactionViewPost operation in ReactionApi.
 * @export
 * @interface ReactionApiCreateReactionViewPostRequest
 */
export interface ReactionApiCreateReactionViewPostRequest {
    /**
     *
     * @type {CreateReactionSchema}
     * @memberof ReactionApiCreateReactionViewPost
     */
    readonly createReactionSchema: CreateReactionSchema;
}
/**
 * Request parameters for deleteReactionViewDelete operation in ReactionApi.
 * @export
 * @interface ReactionApiDeleteReactionViewDeleteRequest
 */
export interface ReactionApiDeleteReactionViewDeleteRequest {
    /**
     *
     * @type {number}
     * @memberof ReactionApiDeleteReactionViewDelete
     */
    readonly objectId: number;
    /**
     *
     * @type {ObjectTypeChoices}
     * @memberof ReactionApiDeleteReactionViewDelete
     */
    readonly objectType: ObjectTypeChoices;
    /**
     *
     * @type {string}
     * @memberof ReactionApiDeleteReactionViewDelete
     */
    readonly action: string;
}
/**
 * Request parameters for getReactionsViewGet operation in ReactionApi.
 * @export
 * @interface ReactionApiGetReactionsViewGetRequest
 */
export interface ReactionApiGetReactionsViewGetRequest {
    /**
     *
     * @type {number}
     * @memberof ReactionApiGetReactionsViewGet
     */
    readonly objectId: number;
    /**
     *
     * @type {ObjectTypeChoices}
     * @memberof ReactionApiGetReactionsViewGet
     */
    readonly objectType: ObjectTypeChoices;
    /**
     * Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @type {string}
     * @memberof ReactionApiGetReactionsViewGet
     */
    readonly sort?: string;
    /**
     * Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @type {string}
     * @memberof ReactionApiGetReactionsViewGet
     */
    readonly offset?: string;
    /**
     * Limit of rows count in the response
     * @type {number}
     * @memberof ReactionApiGetReactionsViewGet
     */
    readonly limit?: number;
    /**
     * Filter object reactions by action.
     * @type {string}
     * @memberof ReactionApiGetReactionsViewGet
     */
    readonly action?: string;
}
/**
 * ReactionApi - interface
 * @export
 * @interface ReactionApi
 */
export interface ReactionApiInterface {
    /**
     *
     * @summary Create Reaction View
     * @param {CreateReactionSchema} createReactionSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApiInterface
     */
    createReactionViewPost(requestParameters: ReactionApiCreateReactionViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     *
     * @summary Delete Reaction View
     * @param {number} objectId
     * @param {ObjectTypeChoices} objectType
     * @param {string} action
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApiInterface
     */
    deleteReactionViewDelete(requestParameters: ReactionApiDeleteReactionViewDeleteRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - action: str
     * @summary Get Reactions View
     * @param {number} objectId
     * @param {ObjectTypeChoices} objectType
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {string} [action] Filter object reactions by action.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApiInterface
     */
    getReactionsViewGet(requestParameters: ReactionApiGetReactionsViewGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<ListReactionsSchema>;
}
/**
 * ReactionApi - object-oriented interface
 * @export
 * @class ReactionApi
 * @extends {BaseAPI}
 */
export declare class ReactionApi extends BaseAPI implements ReactionApiInterface {
    /**
     *
     * @summary Create Reaction View
     * @param {ReactionApiCreateReactionViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApi
     */
    createReactionViewPost(requestParameters: ReactionApiCreateReactionViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Delete Reaction View
     * @param {ReactionApiDeleteReactionViewDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApi
     */
    deleteReactionViewDelete(requestParameters: ReactionApiDeleteReactionViewDeleteRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - action: str
     * @summary Get Reactions View
     * @param {ReactionApiGetReactionsViewGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ReactionApi
     */
    getReactionsViewGet(requestParameters: ReactionApiGetReactionsViewGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ListReactionsSchema, any>>;
}
