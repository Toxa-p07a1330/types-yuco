/**
 * YUCO Auth
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { UsersInfoSchema } from '../model';
/**
 * PrivateApi - axios parameter creator
 * @export
 */
export declare const PrivateApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Get User
     * @param {Set<string>} [ids]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserGet: (ids?: Set<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PrivateApi - functional programming interface
 * @export
 */
export declare const PrivateApiFp: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Get User
     * @param {Set<string>} [ids]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserGet(ids?: Set<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UsersInfoSchema>>;
};
/**
 * Request parameters for getUserGet operation in PrivateApi.
 * @export
 * @interface PrivateApiGetUserGetRequest
 */
export interface PrivateApiGetUserGetRequest {
    /**
     *
     * @type {Set<string>}
     * @memberof PrivateApiGetUserGet
     */
    readonly ids?: Set<string>;
}
/**
 * PrivateApi - interface
 * @export
 * @interface PrivateApi
 */
export interface PrivateApiInterface {
    /**
     *
     * @summary Get User
     * @param {Set<string>} [ids]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PrivateApiInterface
     */
    getUserGet(requestParameters: PrivateApiGetUserGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<UsersInfoSchema>;
}
/**
 * PrivateApi - object-oriented interface
 * @export
 * @class PrivateApi
 * @extends {BaseAPI}
 */
export declare class PrivateApi extends BaseAPI implements PrivateApiInterface {
    /**
     *
     * @summary Get User
     * @param {PrivateApiGetUserGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PrivateApi
     */
    getUserGet(requestParameters?: PrivateApiGetUserGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UsersInfoSchema, any>>;
}
