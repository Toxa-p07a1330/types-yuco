/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { AdCreateSchema } from '../model';
import type { AdDetailSchema } from '../model';
import type { AdListSchema } from '../model';
import type { AdUpdateSchema } from '../model';
import type { AdUpdateStatusSchema } from '../model';
import type { ExtendedAdListSchema } from '../model';
/**
 * AdsApi - axios parameter creator
 * @export
 */
export declare const AdsApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Create Ad View
     * @param {AdCreateSchema} adCreateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAdViewPost: (adCreateSchema: AdCreateSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int
     * @summary Get Ads View
     * @param {boolean} isArchived
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAdsViewGet: (isArchived: boolean, sort?: string, offset?: string, limit?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int #
     * @summary Get Shared Ads View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSharedAdsViewGet: (sort?: string, offset?: string, limit?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Update Ad Status View
     * @param {number} adId
     * @param {AdUpdateStatusSchema} adUpdateStatusSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAdStatusViewPatch: (adId: number, adUpdateStatusSchema: AdUpdateStatusSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Update Ad View
     * @param {number} adId
     * @param {AdUpdateSchema} adUpdateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAdViewPatch: (adId: number, adUpdateSchema: AdUpdateSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AdsApi - functional programming interface
 * @export
 */
export declare const AdsApiFp: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Create Ad View
     * @param {AdCreateSchema} adCreateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAdViewPost(adCreateSchema: AdCreateSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AdDetailSchema>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int
     * @summary Get Ads View
     * @param {boolean} isArchived
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAdsViewGet(isArchived: boolean, sort?: string, offset?: string, limit?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AdListSchema>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int #
     * @summary Get Shared Ads View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSharedAdsViewGet(sort?: string, offset?: string, limit?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ExtendedAdListSchema>>;
    /**
     *
     * @summary Update Ad Status View
     * @param {number} adId
     * @param {AdUpdateStatusSchema} adUpdateStatusSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAdStatusViewPatch(adId: number, adUpdateStatusSchema: AdUpdateStatusSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AdDetailSchema>>;
    /**
     *
     * @summary Update Ad View
     * @param {number} adId
     * @param {AdUpdateSchema} adUpdateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAdViewPatch(adId: number, adUpdateSchema: AdUpdateSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AdDetailSchema>>;
};
/**
 * Request parameters for createAdViewPost operation in AdsApi.
 * @export
 * @interface AdsApiCreateAdViewPostRequest
 */
export interface AdsApiCreateAdViewPostRequest {
    /**
     *
     * @type {AdCreateSchema}
     * @memberof AdsApiCreateAdViewPost
     */
    readonly adCreateSchema: AdCreateSchema;
}
/**
 * Request parameters for getAdsViewGet operation in AdsApi.
 * @export
 * @interface AdsApiGetAdsViewGetRequest
 */
export interface AdsApiGetAdsViewGetRequest {
    /**
     *
     * @type {boolean}
     * @memberof AdsApiGetAdsViewGet
     */
    readonly isArchived: boolean;
    /**
     * Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @type {string}
     * @memberof AdsApiGetAdsViewGet
     */
    readonly sort?: string;
    /**
     * Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @type {string}
     * @memberof AdsApiGetAdsViewGet
     */
    readonly offset?: string;
    /**
     * Limit of rows count in the response
     * @type {number}
     * @memberof AdsApiGetAdsViewGet
     */
    readonly limit?: number;
}
/**
 * Request parameters for getSharedAdsViewGet operation in AdsApi.
 * @export
 * @interface AdsApiGetSharedAdsViewGetRequest
 */
export interface AdsApiGetSharedAdsViewGetRequest {
    /**
     * Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @type {string}
     * @memberof AdsApiGetSharedAdsViewGet
     */
    readonly sort?: string;
    /**
     * Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @type {string}
     * @memberof AdsApiGetSharedAdsViewGet
     */
    readonly offset?: string;
    /**
     * Limit of rows count in the response
     * @type {number}
     * @memberof AdsApiGetSharedAdsViewGet
     */
    readonly limit?: number;
}
/**
 * Request parameters for updateAdStatusViewPatch operation in AdsApi.
 * @export
 * @interface AdsApiUpdateAdStatusViewPatchRequest
 */
export interface AdsApiUpdateAdStatusViewPatchRequest {
    /**
     *
     * @type {number}
     * @memberof AdsApiUpdateAdStatusViewPatch
     */
    readonly adId: number;
    /**
     *
     * @type {AdUpdateStatusSchema}
     * @memberof AdsApiUpdateAdStatusViewPatch
     */
    readonly adUpdateStatusSchema: AdUpdateStatusSchema;
}
/**
 * Request parameters for updateAdViewPatch operation in AdsApi.
 * @export
 * @interface AdsApiUpdateAdViewPatchRequest
 */
export interface AdsApiUpdateAdViewPatchRequest {
    /**
     *
     * @type {number}
     * @memberof AdsApiUpdateAdViewPatch
     */
    readonly adId: number;
    /**
     *
     * @type {AdUpdateSchema}
     * @memberof AdsApiUpdateAdViewPatch
     */
    readonly adUpdateSchema: AdUpdateSchema;
}
/**
 * AdsApi - interface
 * @export
 * @interface AdsApi
 */
export interface AdsApiInterface {
    /**
     *
     * @summary Create Ad View
     * @param {AdCreateSchema} adCreateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApiInterface
     */
    createAdViewPost(requestParameters: AdsApiCreateAdViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<AdDetailSchema>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int
     * @summary Get Ads View
     * @param {boolean} isArchived
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApiInterface
     */
    getAdsViewGet(requestParameters: AdsApiGetAdsViewGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<AdListSchema>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int #
     * @summary Get Shared Ads View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApiInterface
     */
    getSharedAdsViewGet(requestParameters: AdsApiGetSharedAdsViewGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<ExtendedAdListSchema>;
    /**
     *
     * @summary Update Ad Status View
     * @param {number} adId
     * @param {AdUpdateStatusSchema} adUpdateStatusSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApiInterface
     */
    updateAdStatusViewPatch(requestParameters: AdsApiUpdateAdStatusViewPatchRequest, options?: RawAxiosRequestConfig): AxiosPromise<AdDetailSchema>;
    /**
     *
     * @summary Update Ad View
     * @param {number} adId
     * @param {AdUpdateSchema} adUpdateSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApiInterface
     */
    updateAdViewPatch(requestParameters: AdsApiUpdateAdViewPatchRequest, options?: RawAxiosRequestConfig): AxiosPromise<AdDetailSchema>;
}
/**
 * AdsApi - object-oriented interface
 * @export
 * @class AdsApi
 * @extends {BaseAPI}
 */
export declare class AdsApi extends BaseAPI implements AdsApiInterface {
    /**
     *
     * @summary Create Ad View
     * @param {AdsApiCreateAdViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    createAdViewPost(requestParameters: AdsApiCreateAdViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AdDetailSchema, any>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int
     * @summary Get Ads View
     * @param {AdsApiGetAdsViewGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    getAdsViewGet(requestParameters: AdsApiGetAdsViewGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AdListSchema, any>>;
    /**
     * ## Available fields for *sort* and *offset*:  - id: int #
     * @summary Get Shared Ads View
     * @param {AdsApiGetSharedAdsViewGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    getSharedAdsViewGet(requestParameters?: AdsApiGetSharedAdsViewGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ExtendedAdListSchema, any>>;
    /**
     *
     * @summary Update Ad Status View
     * @param {AdsApiUpdateAdStatusViewPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    updateAdStatusViewPatch(requestParameters: AdsApiUpdateAdStatusViewPatchRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AdDetailSchema, any>>;
    /**
     *
     * @summary Update Ad View
     * @param {AdsApiUpdateAdViewPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    updateAdViewPatch(requestParameters: AdsApiUpdateAdViewPatchRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AdDetailSchema, any>>;
}
