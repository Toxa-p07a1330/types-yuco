/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { ObjectType } from '../model';
import type { ViewContentsSchema } from '../model';
import type { ViewObjectsSchema } from '../model';
/**
 * ViewsApi - axios parameter creator
 * @export
 */
export declare const ViewsApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary View Contents View
     * @param {ObjectType} objectType
     * @param {ViewContentsSchema} viewContentsSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    viewContentsViewPost: (objectType: ObjectType, viewContentsSchema: ViewContentsSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary View Objects View
     * @param {ObjectType} objectType
     * @param {ViewObjectsSchema} viewObjectsSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    viewObjectsViewPost: (objectType: ObjectType, viewObjectsSchema: ViewObjectsSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ViewsApi - functional programming interface
 * @export
 */
export declare const ViewsApiFp: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary View Contents View
     * @param {ObjectType} objectType
     * @param {ViewContentsSchema} viewContentsSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    viewContentsViewPost(objectType: ObjectType, viewContentsSchema: ViewContentsSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary View Objects View
     * @param {ObjectType} objectType
     * @param {ViewObjectsSchema} viewObjectsSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    viewObjectsViewPost(objectType: ObjectType, viewObjectsSchema: ViewObjectsSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
};
/**
 * Request parameters for viewContentsViewPost operation in ViewsApi.
 * @export
 * @interface ViewsApiViewContentsViewPostRequest
 */
export interface ViewsApiViewContentsViewPostRequest {
    /**
     *
     * @type {ObjectType}
     * @memberof ViewsApiViewContentsViewPost
     */
    readonly objectType: ObjectType;
    /**
     *
     * @type {ViewContentsSchema}
     * @memberof ViewsApiViewContentsViewPost
     */
    readonly viewContentsSchema: ViewContentsSchema;
}
/**
 * Request parameters for viewObjectsViewPost operation in ViewsApi.
 * @export
 * @interface ViewsApiViewObjectsViewPostRequest
 */
export interface ViewsApiViewObjectsViewPostRequest {
    /**
     *
     * @type {ObjectType}
     * @memberof ViewsApiViewObjectsViewPost
     */
    readonly objectType: ObjectType;
    /**
     *
     * @type {ViewObjectsSchema}
     * @memberof ViewsApiViewObjectsViewPost
     */
    readonly viewObjectsSchema: ViewObjectsSchema;
}
/**
 * ViewsApi - interface
 * @export
 * @interface ViewsApi
 */
export interface ViewsApiInterface {
    /**
     *
     * @summary View Contents View
     * @param {ObjectType} objectType
     * @param {ViewContentsSchema} viewContentsSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViewsApiInterface
     */
    viewContentsViewPost(requestParameters: ViewsApiViewContentsViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     *
     * @summary View Objects View
     * @param {ObjectType} objectType
     * @param {ViewObjectsSchema} viewObjectsSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViewsApiInterface
     */
    viewObjectsViewPost(requestParameters: ViewsApiViewObjectsViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
}
/**
 * ViewsApi - object-oriented interface
 * @export
 * @class ViewsApi
 * @extends {BaseAPI}
 */
export declare class ViewsApi extends BaseAPI implements ViewsApiInterface {
    /**
     *
     * @summary View Contents View
     * @param {ViewsApiViewContentsViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViewsApi
     */
    viewContentsViewPost(requestParameters: ViewsApiViewContentsViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary View Objects View
     * @param {ViewsApiViewObjectsViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ViewsApi
     */
    viewObjectsViewPost(requestParameters: ViewsApiViewObjectsViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
}
