/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { DeviceTokenSchema } from '../model';
import type { FirebaseTokenListSchema } from '../model';
/**
 * NotificatonsApi - axios parameter creator
 * @export
 */
export declare const NotificatonsApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Get Firebase Tokens View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFirebaseTokensViewGet: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Add device token to send push notifications.\'        \'If token already exists and it is not active then activates it.
     * @summary Register Device Token View
     * @param {DeviceTokenSchema} deviceTokenSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerDeviceTokenViewPost: (deviceTokenSchema: DeviceTokenSchema, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NotificatonsApi - functional programming interface
 * @export
 */
export declare const NotificatonsApiFp: (configuration?: AxiosConfiguration) => {
    /**
     *
     * @summary Get Firebase Tokens View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFirebaseTokensViewGet(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FirebaseTokenListSchema>>;
    /**
     * Add device token to send push notifications.\'        \'If token already exists and it is not active then activates it.
     * @summary Register Device Token View
     * @param {DeviceTokenSchema} deviceTokenSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    registerDeviceTokenViewPost(deviceTokenSchema: DeviceTokenSchema, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
};
/**
 * Request parameters for registerDeviceTokenViewPost operation in NotificatonsApi.
 * @export
 * @interface NotificatonsApiRegisterDeviceTokenViewPostRequest
 */
export interface NotificatonsApiRegisterDeviceTokenViewPostRequest {
    /**
     *
     * @type {DeviceTokenSchema}
     * @memberof NotificatonsApiRegisterDeviceTokenViewPost
     */
    readonly deviceTokenSchema: DeviceTokenSchema;
}
/**
 * NotificatonsApi - interface
 * @export
 * @interface NotificatonsApi
 */
export interface NotificatonsApiInterface {
    /**
     *
     * @summary Get Firebase Tokens View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificatonsApiInterface
     */
    getFirebaseTokensViewGet(options?: RawAxiosRequestConfig): AxiosPromise<FirebaseTokenListSchema>;
    /**
     * Add device token to send push notifications.\'        \'If token already exists and it is not active then activates it.
     * @summary Register Device Token View
     * @param {DeviceTokenSchema} deviceTokenSchema
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificatonsApiInterface
     */
    registerDeviceTokenViewPost(requestParameters: NotificatonsApiRegisterDeviceTokenViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
}
/**
 * NotificatonsApi - object-oriented interface
 * @export
 * @class NotificatonsApi
 * @extends {BaseAPI}
 */
export declare class NotificatonsApi extends BaseAPI implements NotificatonsApiInterface {
    /**
     *
     * @summary Get Firebase Tokens View
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificatonsApi
     */
    getFirebaseTokensViewGet(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FirebaseTokenListSchema, any>>;
    /**
     * Add device token to send push notifications.\'        \'If token already exists and it is not active then activates it.
     * @summary Register Device Token View
     * @param {NotificatonsApiRegisterDeviceTokenViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NotificatonsApi
     */
    registerDeviceTokenViewPost(requestParameters: NotificatonsApiRegisterDeviceTokenViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
}
