/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { TimezoneList } from '../model';
/**
 * TimezonesApi - axios parameter creator
 * @export
 */
export declare const TimezonesApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - abbr: str
     * @summary List Timezones View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTimezonesViewGet: (sort?: string, offset?: string, limit?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TimezonesApi - functional programming interface
 * @export
 */
export declare const TimezonesApiFp: (configuration?: AxiosConfiguration) => {
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - abbr: str
     * @summary List Timezones View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTimezonesViewGet(sort?: string, offset?: string, limit?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TimezoneList>>;
};
/**
 * Request parameters for listTimezonesViewGet operation in TimezonesApi.
 * @export
 * @interface TimezonesApiListTimezonesViewGetRequest
 */
export interface TimezonesApiListTimezonesViewGetRequest {
    /**
     * Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @type {string}
     * @memberof TimezonesApiListTimezonesViewGet
     */
    readonly sort?: string;
    /**
     * Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @type {string}
     * @memberof TimezonesApiListTimezonesViewGet
     */
    readonly offset?: string;
    /**
     * Limit of rows count in the response
     * @type {number}
     * @memberof TimezonesApiListTimezonesViewGet
     */
    readonly limit?: number;
}
/**
 * TimezonesApi - interface
 * @export
 * @interface TimezonesApi
 */
export interface TimezonesApiInterface {
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - abbr: str
     * @summary List Timezones View
     * @param {string} [sort] Fields for ordering without spaces and separated by commas.Can be used for ASC and DESC (\&#39;-\&#39; added to the beggining of the field).Example: &amp;sort&#x3D;-username,created_at
     * @param {string} [offset] Values of last received row which used in sort. Example with sort: sort&#x3D;username,-id&amp;offset&#x3D;username123,987
     * @param {number} [limit] Limit of rows count in the response
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TimezonesApiInterface
     */
    listTimezonesViewGet(requestParameters: TimezonesApiListTimezonesViewGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<TimezoneList>;
}
/**
 * TimezonesApi - object-oriented interface
 * @export
 * @class TimezonesApi
 * @extends {BaseAPI}
 */
export declare class TimezonesApi extends BaseAPI implements TimezonesApiInterface {
    /**
     * ## Available fields for *sort* and *offset*:  - id: int - abbr: str
     * @summary List Timezones View
     * @param {TimezonesApiListTimezonesViewGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TimezonesApi
     */
    listTimezonesViewGet(requestParameters?: TimezonesApiListTimezonesViewGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TimezoneList, any>>;
}
