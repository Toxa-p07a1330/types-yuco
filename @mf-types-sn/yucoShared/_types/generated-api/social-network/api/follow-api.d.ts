/**
 * Yuco Backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AxiosConfiguration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { FollowRequestAnswer } from '../model';
import type { FollowRequestStatus } from '../model';
/**
 * FollowApi - axios parameter creator
 * @export
 */
export declare const FollowApiAxiosParamCreator: (configuration?: AxiosConfiguration) => {
    /**
     * Cancel the follow request.
     * @summary Cancel Follow Request View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelFollowRequestViewDelete: (userId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get follow request status
     * @summary Follow Request Status View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followRequestStatusViewGet: (userId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Send follow request.
     * @summary Follow Request View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followRequestViewPost: (userId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Profile Follow View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profileFollowViewPost: (userId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Profile Unfollow View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profileUnfollowViewPost: (userId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove follower.
     * @summary Remove Follower View
     * @param {number} userId ID подписчика, которого нужно удалить
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFollowerViewPost: (userId: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Respond to the follow request.
     * @summary Respond Follow Request View
     * @param {number} userId
     * @param {FollowRequestAnswer} followRequestAnswer
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    respondFollowRequestViewPost: (userId: number, followRequestAnswer: FollowRequestAnswer, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FollowApi - functional programming interface
 * @export
 */
export declare const FollowApiFp: (configuration?: AxiosConfiguration) => {
    /**
     * Cancel the follow request.
     * @summary Cancel Follow Request View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cancelFollowRequestViewDelete(userId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get follow request status
     * @summary Follow Request Status View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followRequestStatusViewGet(userId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FollowRequestStatus>>;
    /**
     * Send follow request.
     * @summary Follow Request View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    followRequestViewPost(userId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Profile Follow View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profileFollowViewPost(userId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Profile Unfollow View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    profileUnfollowViewPost(userId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Remove follower.
     * @summary Remove Follower View
     * @param {number} userId ID подписчика, которого нужно удалить
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFollowerViewPost(userId: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Respond to the follow request.
     * @summary Respond Follow Request View
     * @param {number} userId
     * @param {FollowRequestAnswer} followRequestAnswer
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    respondFollowRequestViewPost(userId: number, followRequestAnswer: FollowRequestAnswer, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
};
/**
 * Request parameters for cancelFollowRequestViewDelete operation in FollowApi.
 * @export
 * @interface FollowApiCancelFollowRequestViewDeleteRequest
 */
export interface FollowApiCancelFollowRequestViewDeleteRequest {
    /**
     *
     * @type {number}
     * @memberof FollowApiCancelFollowRequestViewDelete
     */
    readonly userId: number;
}
/**
 * Request parameters for followRequestStatusViewGet operation in FollowApi.
 * @export
 * @interface FollowApiFollowRequestStatusViewGetRequest
 */
export interface FollowApiFollowRequestStatusViewGetRequest {
    /**
     *
     * @type {number}
     * @memberof FollowApiFollowRequestStatusViewGet
     */
    readonly userId: number;
}
/**
 * Request parameters for followRequestViewPost operation in FollowApi.
 * @export
 * @interface FollowApiFollowRequestViewPostRequest
 */
export interface FollowApiFollowRequestViewPostRequest {
    /**
     *
     * @type {number}
     * @memberof FollowApiFollowRequestViewPost
     */
    readonly userId: number;
}
/**
 * Request parameters for profileFollowViewPost operation in FollowApi.
 * @export
 * @interface FollowApiProfileFollowViewPostRequest
 */
export interface FollowApiProfileFollowViewPostRequest {
    /**
     *
     * @type {number}
     * @memberof FollowApiProfileFollowViewPost
     */
    readonly userId: number;
}
/**
 * Request parameters for profileUnfollowViewPost operation in FollowApi.
 * @export
 * @interface FollowApiProfileUnfollowViewPostRequest
 */
export interface FollowApiProfileUnfollowViewPostRequest {
    /**
     *
     * @type {number}
     * @memberof FollowApiProfileUnfollowViewPost
     */
    readonly userId: number;
}
/**
 * Request parameters for removeFollowerViewPost operation in FollowApi.
 * @export
 * @interface FollowApiRemoveFollowerViewPostRequest
 */
export interface FollowApiRemoveFollowerViewPostRequest {
    /**
     * ID подписчика, которого нужно удалить
     * @type {number}
     * @memberof FollowApiRemoveFollowerViewPost
     */
    readonly userId: number;
}
/**
 * Request parameters for respondFollowRequestViewPost operation in FollowApi.
 * @export
 * @interface FollowApiRespondFollowRequestViewPostRequest
 */
export interface FollowApiRespondFollowRequestViewPostRequest {
    /**
     *
     * @type {number}
     * @memberof FollowApiRespondFollowRequestViewPost
     */
    readonly userId: number;
    /**
     *
     * @type {FollowRequestAnswer}
     * @memberof FollowApiRespondFollowRequestViewPost
     */
    readonly followRequestAnswer: FollowRequestAnswer;
}
/**
 * FollowApi - interface
 * @export
 * @interface FollowApi
 */
export interface FollowApiInterface {
    /**
     * Cancel the follow request.
     * @summary Cancel Follow Request View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApiInterface
     */
    cancelFollowRequestViewDelete(requestParameters: FollowApiCancelFollowRequestViewDeleteRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Get follow request status
     * @summary Follow Request Status View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApiInterface
     */
    followRequestStatusViewGet(requestParameters: FollowApiFollowRequestStatusViewGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<FollowRequestStatus>;
    /**
     * Send follow request.
     * @summary Follow Request View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApiInterface
     */
    followRequestViewPost(requestParameters: FollowApiFollowRequestViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     *
     * @summary Profile Follow View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApiInterface
     */
    profileFollowViewPost(requestParameters: FollowApiProfileFollowViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     *
     * @summary Profile Unfollow View
     * @param {number} userId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApiInterface
     */
    profileUnfollowViewPost(requestParameters: FollowApiProfileUnfollowViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     * Remove follower.
     * @summary Remove Follower View
     * @param {number} userId ID подписчика, которого нужно удалить
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApiInterface
     */
    removeFollowerViewPost(requestParameters: FollowApiRemoveFollowerViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
    /**
     * Respond to the follow request.
     * @summary Respond Follow Request View
     * @param {number} userId
     * @param {FollowRequestAnswer} followRequestAnswer
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApiInterface
     */
    respondFollowRequestViewPost(requestParameters: FollowApiRespondFollowRequestViewPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<any>;
}
/**
 * FollowApi - object-oriented interface
 * @export
 * @class FollowApi
 * @extends {BaseAPI}
 */
export declare class FollowApi extends BaseAPI implements FollowApiInterface {
    /**
     * Cancel the follow request.
     * @summary Cancel Follow Request View
     * @param {FollowApiCancelFollowRequestViewDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApi
     */
    cancelFollowRequestViewDelete(requestParameters: FollowApiCancelFollowRequestViewDeleteRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Get follow request status
     * @summary Follow Request Status View
     * @param {FollowApiFollowRequestStatusViewGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApi
     */
    followRequestStatusViewGet(requestParameters: FollowApiFollowRequestStatusViewGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FollowRequestStatus, any>>;
    /**
     * Send follow request.
     * @summary Follow Request View
     * @param {FollowApiFollowRequestViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApi
     */
    followRequestViewPost(requestParameters: FollowApiFollowRequestViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Profile Follow View
     * @param {FollowApiProfileFollowViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApi
     */
    profileFollowViewPost(requestParameters: FollowApiProfileFollowViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Profile Unfollow View
     * @param {FollowApiProfileUnfollowViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApi
     */
    profileUnfollowViewPost(requestParameters: FollowApiProfileUnfollowViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     * Remove follower.
     * @summary Remove Follower View
     * @param {FollowApiRemoveFollowerViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApi
     */
    removeFollowerViewPost(requestParameters: FollowApiRemoveFollowerViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     * Respond to the follow request.
     * @summary Respond Follow Request View
     * @param {FollowApiRespondFollowRequestViewPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FollowApi
     */
    respondFollowRequestViewPost(requestParameters: FollowApiRespondFollowRequestViewPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
}
