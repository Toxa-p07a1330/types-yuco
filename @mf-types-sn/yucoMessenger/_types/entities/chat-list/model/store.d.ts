import { ChatListType, TChatItem } from 'entities/chat/model/types';
import { IMember, TChatMutePeriod, TChatSelectionItem, TChatSelectionTag, TUserSelectionCard } from 'shared/types';
export declare const chatListReducer: import("redux").Reducer<ChatListType, import("redux").AnyAction>;
export declare const resetChatList: import("@reduxjs/toolkit").ActionCreatorWithPayload<TChatItem[], "chatList/resetChatList">, setItemArchive: import("@reduxjs/toolkit").ActionCreatorWithPayload<TChatItem, "chatList/setItemArchive">, setItemMute: import("@reduxjs/toolkit").ActionCreatorWithPayload<{
    uuid: string;
    period: TChatMutePeriod | null;
}, "chatList/setItemMute">, setItemPin: import("@reduxjs/toolkit").ActionCreatorWithPayload<TChatItem, "chatList/setItemPin">, toggleMemberToOwner: import("@reduxjs/toolkit").ActionCreatorWithPayload<IMember, "chatList/toggleMemberToOwner">, resetMemberToOwner: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<"chatList/resetMemberToOwner">, setPotentialOwners: import("@reduxjs/toolkit").ActionCreatorWithPayload<TUserSelectionCard[], "chatList/setPotentialOwners">, resetPotentialOwners: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<"chatList/resetPotentialOwners">, selectPotentialMember: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, "chatList/selectPotentialMember">, setSelectedChats: import("@reduxjs/toolkit").ActionCreatorWithPayload<TChatSelectionItem[], "chatList/setSelectedChats">, toggleSelectChatMode: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<"chatList/toggleSelectChatMode">, onTagAction: import("@reduxjs/toolkit").ActionCreatorWithPayload<TChatSelectionTag, "chatList/onTagAction">, setNewFolderName: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, "chatList/setNewFolderName">, setIsFolderEditMode: import("@reduxjs/toolkit").ActionCreatorWithPayload<boolean, "chatList/setIsFolderEditMode">, setInteractiveFolderName: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, "chatList/setInteractiveFolderName">;
